// <auto-generated />
using System;
using Api_AdminAcademic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_AdminAcademic.Migrations
{
    [DbContext(typeof(ContextDb))]
    partial class ContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api_AdminAcademic.Models.Alumnos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("alumnos");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.AlumnosXCursos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAlumno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCurso")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdCurso");

                    b.ToTable("alumnosXcursos");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Carreras", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("carreras");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Cursos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdCarrera")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCarrera");

                    b.ToTable("cursos");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Docentes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("docentes");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.DocentesXCursos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdCurso")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDocente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdCurso");

                    b.HasIndex("IdDocente");

                    b.ToTable("docentesXcursos");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Usuarios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Alumnos", b =>
                {
                    b.HasOne("Api_AdminAcademic.Models.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.AlumnosXCursos", b =>
                {
                    b.HasOne("Api_AdminAcademic.Models.Alumnos", "Alumno")
                        .WithMany("AlumnosXCursos")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_AdminAcademic.Models.Cursos", "Curso")
                        .WithMany("AlumnosXCursos")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Cursos", b =>
                {
                    b.HasOne("Api_AdminAcademic.Models.Carreras", "Carrera")
                        .WithMany("Cursos")
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Docentes", b =>
                {
                    b.HasOne("Api_AdminAcademic.Models.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.DocentesXCursos", b =>
                {
                    b.HasOne("Api_AdminAcademic.Models.Cursos", "Curso")
                        .WithMany("DocentesXCursos")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_AdminAcademic.Models.Docentes", "Docente")
                        .WithMany("DocentesXCursos")
                        .HasForeignKey("IdDocente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Usuarios", b =>
                {
                    b.HasOne("Api_AdminAcademic.Models.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Alumnos", b =>
                {
                    b.Navigation("AlumnosXCursos");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Carreras", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Cursos", b =>
                {
                    b.Navigation("AlumnosXCursos");

                    b.Navigation("DocentesXCursos");
                });

            modelBuilder.Entity("Api_AdminAcademic.Models.Docentes", b =>
                {
                    b.Navigation("DocentesXCursos");
                });
#pragma warning restore 612, 618
        }
    }
}
